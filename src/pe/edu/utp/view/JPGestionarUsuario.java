/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pe.edu.utp.view;

import java.awt.print.PrinterException;
import java.text.MessageFormat;
import java.util.List;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import pe.edu.utp.model.Usuario;
import pe.edu.utp.controller.UsuarioController;

/**
 *
 * @author BRANDY
 */
public class JPGestionarUsuario extends javax.swing.JPanel {

    UsuarioController objUsuarioControl = new UsuarioController();
    private List<Usuario> usuarios = null;

    /**
     * Creates new form JPGestionarUsuario
     */
    public JPGestionarUsuario() {
        initComponents();
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btnOrdenar1 = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("GESTION DE USUARIO");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, 270, 40));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Apellidos", "FechaNacimiento", "DNI", "Correo Electronico", "Area"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setGridColor(new java.awt.Color(0, 204, 204));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 134, 680, 440));

        jLabel2.setText("Tabla del usuario:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 112, -1, -1));
        add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 70, 180, -1));

        jLabel3.setText("Buscar:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/img/buscar.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 70, 30, 20));

        btnOrdenar1.setBackground(new java.awt.Color(255, 51, 51));
        btnOrdenar1.setText("PDF");
        btnOrdenar1.setToolTipText("");
        btnOrdenar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenar1ActionPerformed(evt);
            }
        });
        add(btnOrdenar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, 80, 30));

        btnOrdenar.setBackground(new java.awt.Color(153, 255, 153));
        btnOrdenar.setText("Ordenar");
        btnOrdenar.setToolTipText("");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });
        add(btnOrdenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, 80, 30));

        btnActualizar.setBackground(new java.awt.Color(204, 255, 255));
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/img/actualizar-flecha.png"))); // NOI18N
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 540, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        tablaOrdenada();
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void btnOrdenar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenar1ActionPerformed
        pdf();
    }//GEN-LAST:event_btnOrdenar1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       buscar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
      actualizarTabla();
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnOrdenar1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
   public DefaultTableModel crearTabla() {
        DefaultTableModel objModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Todas las celdas no son editables
            }
        ;
        };
       String columna[] = {"Id", "Nombre", "Area", "Fecha-contratacion",
            "DNI", "Correo_Electronico"};
        objModel.setColumnIdentifiers(columna);
        //Estableciendo el modelo al jtable
        //Colocando el inventario de la bd a cada fila de la tabla

        return objModel;
    }

    private void actualizarTabla() {
        //CREAR TABLA Y ESTABLECER LA LISTA DE USUARIOS
        DefaultTableModel objModel = crearTabla();
        usuarios = objUsuarioControl.obtenerTodosLosUsuarios();

        //COLOCAR LAS FILAS DE LA TABLA
        for (Usuario usuario : usuarios) {
            objModel.addRow(new Object[]{
                usuario.getId_empleado(), usuario.toString(),
                usuario.getArea(), usuario.getFecha_contratacion(), usuario.getDni(), usuario.getCorreo_electronico()
            });
        }
        //ESTABLECER EL MODELO A LA TABLA
        jTable1.setModel(objModel);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
    }

    //Ordenar
    private void tablaOrdenada() {
        //CREAR TABLA
        DefaultTableModel objModel = crearTabla();
        //ORDENAR DE FORMA ALFABETICA
        quickSort(usuarios, 0, usuarios.size() - 1);

        //AGREGAR FILAS
        for (Usuario usuario : usuarios) {
            objModel.addRow(new Object[]{
                usuario.getId_empleado(), usuario.toString(),
                usuario.getArea(), usuario.getFecha_contratacion(), usuario.getDni(), usuario.getCorreo_electronico()
            });
        }
        //ESTABLECER MODELO
        jTable1.setModel(objModel);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
    }

    //buscar 
    private void buscar() {
        //BUSQUEDA
        String nombre = txtBuscar.getText().trim();
        //ORDENAR
        quickSort(usuarios, 0, usuarios.size() - 1);
        //BUSQUEDA BINARIA
        int index = busquedaBinaria(usuarios, nombre);
        if(index == -1) {
            JOptionPane.showMessageDialog(null, "No se encontro el usuario");
            return ;
        }
        //ESTABLECER MODELO TABLA
        DefaultTableModel objModel = crearTabla();
        Usuario usuario = usuarios.get(index);
        
        //AGREGAR FILAS
        objModel.addRow(new Object[]{
            usuario.getId_empleado(), usuario.toString(),
            usuario.getArea(), usuario.getFecha_contratacion(), usuario.getDni(), usuario.getCorreo_electronico()
        });
        
        //COLOCAR EL MODELO A LA TABLA
        jTable1.setModel(objModel);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
    }

    // Implementación del Quicksort
    public static void quickSort(List<Usuario> lista, int low, int high) {
        if (low < high) {
            int pi = partition(lista, low, high);

            quickSort(lista, low, pi - 1);
            quickSort(lista, pi + 1, high);
        }
    }

    private static int partition(List<Usuario> lista, int low, int high) {
        Usuario pivot = lista.get(high);
        int i = (low - 1);
        for (int j = low; j < high; j++) {
            if (lista.get(j).getNombre().compareToIgnoreCase(pivot.getNombre()) < 0) {
                i++;

                // Swap lista[i] and lista[j]
                Usuario temp = lista.get(i);
                lista.set(i, lista.get(j));
                lista.set(j, temp);
            }
        }

        // Swap lista[i+1] and lista[high] (or pivot)
        Usuario temp = lista.get(i + 1);
        lista.set(i + 1, lista.get(high));
        lista.set(high, temp);

        return i + 1;
    }

    // Implementación de la búsqueda binaria
    public static int busquedaBinaria(List<Usuario> lista, String nombre) {
        int bajo = 0;
        int alto = lista.size() - 1;

        while (bajo <= alto) {
            int medio = bajo + (alto - bajo) / 2;
            Usuario usuarioMedio = lista.get(medio);
            int comparacion = usuarioMedio.getNombre().compareToIgnoreCase(nombre);

            if (comparacion == 0) {
                return medio; // Nombre encontrado
            } else if (comparacion < 0) {
                bajo = medio + 1; // Buscar en el subarreglo derecho
            } else {
                alto = medio - 1; // Buscar en el subarreglo izquierdo
            }
        }

        return -1; // Nombre no encontrado
    }

    private void pdf() {
        MessageFormat header = new MessageFormat("Usuarios");
        MessageFormat footer = new MessageFormat("Página {0}");

        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.LANDSCAPE);

            boolean complete = jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer, true, set, false);
            if (complete) {
                System.out.println("Impresión completada.");
            } else {
                System.out.println("Impresión cancelada.");
            }
        } catch (PrinterException e) {
            System.err.println("Error durante la impresión: " + e.getMessage());
        }
    }

}
