/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pe.edu.utp.view;

import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pe.edu.utp.controller.AutorController;
import pe.edu.utp.controller.CategoriaController;
import pe.edu.utp.controller.EditorialController;
import pe.edu.utp.controller.HistorialController;
import pe.edu.utp.controller.ProductoController;
import pe.edu.utp.model.Autor;
import pe.edu.utp.model.Categoria;
import pe.edu.utp.model.Editorial;
import pe.edu.utp.model.Producto;

/**
 *
 * @author BRANDY
 */
public class JPActualizarProducto extends javax.swing.JPanel {

    ProductoController objProductoControl = new ProductoController();
    AutorController objAutorControl = new AutorController();
    EditorialController objEditorialControl = new EditorialController();
    CategoriaController objCategoriaControl = new CategoriaController();
    HistorialController objHistorialControl = new HistorialController();
    Producto producto = null;
    List<Producto> productos = null;

    public JPActualizarProducto() {
        initComponents();
        actualizarTabla();
        agregandoComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIsbn = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtIdioma = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtStock = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        boxAutor = new javax.swing.JComboBox<>();
        boxCategoria = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        boxEditorial = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("ACTUALIZAR PRODUCTO");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        jLabel2.setText("Buscar:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));
        add(txtBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 170, -1));

        btnBuscar.setBackground(new java.awt.Color(153, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/img/buscar.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 55, 30, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "Autor", "Fecha Publicacion", "ISBN", "Idioma", "Editorial", "Precio", "Stock"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 780, 260));

        jLabel3.setText("Titulo:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        jLabel4.setText("Autor:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        txtTitulo.setEnabled(false);
        add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 400, 150, -1));

        jLabel5.setText("Fecha de Publicacion:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, -1, -1));

        txtFecha.setEnabled(false);
        add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 480, 150, -1));

        jLabel6.setText("ISBN:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, -1, -1));

        txtIsbn.setEnabled(false);
        txtIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIsbnActionPerformed(evt);
            }
        });
        add(txtIsbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 150, -1));

        jLabel7.setText("Editorial:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, -1, -1));

        txtIdioma.setEnabled(false);
        add(txtIdioma, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 150, -1));

        jLabel8.setText("Idioma:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 440, -1, -1));

        jLabel9.setText("Precio:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 400, -1, -1));

        txtPrecio.setEnabled(false);
        add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 400, 150, -1));

        jLabel10.setText("Stock:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 440, -1, -1));

        txtStock.setEnabled(false);
        add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 440, 150, -1));

        jButton2.setBackground(new java.awt.Color(102, 51, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Elegir Producto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 370, 120, -1));

        jButton3.setBackground(new java.awt.Color(102, 255, 102));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Actualizar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, 220, 40));

        boxAutor.setEnabled(false);
        add(boxAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 440, 150, -1));

        boxCategoria.setEnabled(false);
        add(boxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 480, 150, -1));

        jLabel11.setText("Categoria:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, -1, -1));

        boxEditorial.setEnabled(false);
        add(boxEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, 150, -1));

        jButton4.setBackground(new java.awt.Color(153, 204, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pe/edu/utp/img/actualizar-flecha.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 30, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIsbnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        elegirProducto();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        actualizarProducto();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        buscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        actualizarTabla();
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Object> boxAutor;
    private javax.swing.JComboBox<Object> boxCategoria;
    private javax.swing.JComboBox<Object> boxEditorial;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdioma;
    private javax.swing.JTextField txtIsbn;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtStock;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
 //CREAR TABLA
    private DefaultTableModel crearTabla() {
        DefaultTableModel objModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Todas las celdas no son editables
            }
        ;
        };
         String columna[] = {
            "Id", "Titulo", "Autor", "Editorial",
            "Categoria", "ISBN", "Publicacion", "Idioma", "Precio", "Stock"
        };
        objModel.setColumnIdentifiers(columna);
        //Estableciendo el modelo al jtable
        //Colocando el inventario de la bd a cada fila de la tabla

        return objModel;
    }

    private void actualizarTabla() {

        DefaultTableModel objModel = crearTabla();

        productos = objProductoControl.obtenerTodosLosProductos();

        //COLOCAR CADA UNO DE LOS DATOS
        for (Producto objProducto : productos) {
            objModel.addRow(new Object[]{objProducto.getId_libro(), objProducto.getTitulo(),
                objProducto.getAutor().toString(), objProducto.getEditorial().toString(),
                objProducto.getCategoria().toString(),
                objProducto.getIsbn(), objProducto.getFecha_publicacion(), objProducto.getIdioma(),
                objProducto.getPrecio(), objProducto.getCantidad()});
        }

        jTable1.setModel(objModel);
    }

    private void agregandoComboBox() {
        List<Autor> autores = objAutorControl.obtenerTodosLosAutores();
        List<Editorial> editoriales = objEditorialControl.obtenerTodasLasEditoriales();
        List<Categoria> categorias = objCategoriaControl.obtenerTodasLasCategorias();

        for (Categoria categoria : categorias) {
            boxCategoria.addItem(categoria);
        }

        for (Editorial editorial : editoriales) {
            boxEditorial.addItem(editorial);
        }

        for (Autor autor : autores) {
            boxAutor.addItem(autor);
        }
    }

    private void elegirProducto() {
        //Verificar si se selecciono un producto
        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada != -1) {
            int idPedido = (int) jTable1.getValueAt(filaSeleccionada, 0);
            //guardar el producto en una variable global
            producto = objProductoControl.obtenerProductoPorId(idPedido);
            habilitarCampos();
            establecerTextoCampos(producto);
        } else {
            JOptionPane.showMessageDialog(null, "No se selecciono ningun pedido");
        }

    }

    //HABILITAR CAMPOS
    private void habilitarCampos() {
        txtTitulo.setEnabled(true);
        txtStock.setEnabled(true);
        txtPrecio.setEnabled(true);
        txtIsbn.setEnabled(true);
        txtIdioma.setEnabled(true);
        txtFecha.setEnabled(true);
        boxEditorial.setEnabled(true);
        boxAutor.setEnabled(true);
        boxCategoria.setEnabled(true);
    }

    //ESTABLECER TEXTO EN LOS CAMPOS
    private void establecerTextoCampos(Producto producto) {
        txtTitulo.setText(producto.getTitulo());
        txtStock.setText(String.valueOf(producto.getCantidad()));
        txtPrecio.setText(String.valueOf(producto.getPrecio()));
        txtIsbn.setText(String.valueOf(producto.getIsbn()));
        txtIdioma.setText(producto.getIdioma());
        txtFecha.setText(producto.getFecha_publicacion());
        boxEditorial.setSelectedItem(producto.getEditorial());
        boxAutor.setSelectedItem(producto.getAutor());
        boxCategoria.setSelectedItem(producto.getCategoria());
    }

    private void actualizarProducto() {

        String titulo = txtTitulo.getText();
        int stock = Integer.parseInt(txtStock.getText());
        double precio = Double.parseDouble(txtPrecio.getText());
        long isbn = Long.parseLong(txtIsbn.getText());
        String idioma = txtIdioma.getText();
        String fecha = txtFecha.getText();
        Editorial editorial = (Editorial) boxEditorial.getSelectedItem();
        Autor autor = (Autor) boxAutor.getSelectedItem();
        Categoria categoria = (Categoria) boxCategoria.getSelectedItem();

        producto.setTitulo(titulo);
        producto.setCantidad(stock);
        producto.setPrecio(precio);
        producto.setIsbn(isbn);
        producto.setIdioma(idioma);
        producto.setFecha_publicacion(fecha);
        producto.setEditorial(editorial);
        producto.setAutor(autor); // Suponiendo que el método setAutor acepta un objeto de tipo Autor
        producto.setCategoria(categoria);

        objProductoControl.actualizarProducto(producto);

        JOptionPane.showMessageDialog(null, "Se guardo Correctamente");
        //PILAS: AGREGAR AL HISTORIAL
        String fechaActual = LocalDate.now().toString();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
        String horaActual = LocalTime.now().format(formatter);
        String actividad = "Se actualizo el libro titulado: " + producto.getTitulo();
        objHistorialControl.agregarHistorial(fechaActual, horaActual, actividad);
    }

    private void buscar() {
        String titulo = txtBuscar.getText().trim();
        DefaultTableModel objModel = crearTabla();

        //Ordenar
        quickSort(productos, 0, productos.size() - 1);
        //Buscar
        int index = busquedaBinaria(productos, titulo);
        if (index == -1) {
            JOptionPane.showMessageDialog(null, "No se encontro el producto");
            return;
        }
        //Producto encontrado
        Producto objProducto = productos.get(index);

        //colocar elementos
        objModel.addRow(new Object[]{objProducto.getId_libro(), objProducto.getTitulo(),
            objProducto.getAutor().toString(), objProducto.getEditorial().toString(),
            objProducto.getCategoria().toString(),
            objProducto.getIsbn(), objProducto.getFecha_publicacion(), objProducto.getIdioma(),
            objProducto.getPrecio(), objProducto.getCantidad()});

        //COLOCAR EL MODELO A LA TABLA
        jTable1.setModel(objModel);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(1);
    }

    //QUICKSORT
    public static void quickSort(List<Producto> productos, int low, int high) {
        if (low < high) {
            int pi = partition(productos, low, high);

            quickSort(productos, low, pi - 1);  // Antes de pi
            quickSort(productos, pi + 1, high); // Después de pi
        }
    }

    private static int partition(List<Producto> productos, int low, int high) {
        Producto pivot = productos.get(high);
        int i = (low - 1); // índice de elemento más pequeño

        for (int j = low; j < high; j++) {
            // Si el elemento actual es más pequeño o igual al pivot
            if (productos.get(j).getTitulo().compareTo(pivot.getTitulo()) <= 0) {
                i++;

                // Intercambiar productos.get(i) y productos.get(j)
                Producto temp = productos.get(i);
                productos.set(i, productos.get(j));
                productos.set(j, temp);
            }
        }

        // Intercambiar productos.get(i+1) y productos.get(high) (o pivot)
        Producto temp = productos.get(i + 1);
        productos.set(i + 1, productos.get(high));
        productos.set(high, temp);

        return i + 1;
    }

    //BUSQUEDA BINARIA
    public static int busquedaBinaria(List<Producto> productos, String titulo) {
        int low = 0;
        int high = productos.size() - 1;

        while (low <= high) {
            int mid = (low + high) / 2;
            Producto midVal = productos.get(mid);
            int cmp = midVal.getTitulo().compareTo(titulo);

            if (cmp < 0) {
                low = mid + 1;
            } else if (cmp > 0) {
                high = mid - 1;
            } else {
                return mid; // Título encontrado
            }
        }
        return -1; // Título no encontrado
    }

}
